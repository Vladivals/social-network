{"version":3,"file":"static/js/657.ef638de4.chunk.js","mappings":"gKACA,G,QAAA,CAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,UAAY,6B,6BCmBrN,EAdmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAEE,iBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,WACM,gBAAKC,IAAKC,EAAWH,UAAWC,EAAAA,aAEpC,SAAC,KAAD,CAASG,GAAIN,EAAb,SAAoBD,EAAMQ,WCFhC,EANgB,SAACR,GACf,OAAO,gBAAKG,UAAWC,EAAAA,OAAhB,SAA2BJ,EAAMS,W,uCCHpCC,GAAaC,EAAAA,EAAAA,GAAiB,GAoBtBC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAlBb,SAACb,GACpB,OACE,kBAAMe,SAAUf,EAAMgB,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CACGC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUX,GACrBY,YAAY,qBACZd,KAAK,sBAGV,0BACE,6CCwBV,EAjCgB,SAACR,GACf,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,SAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMN,GAAI0B,EAAE1B,QAE9B2B,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACxC,SAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAYtB,OACE,iBAAKN,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SAAiCqB,KACjC,iBAAKtB,UAAWC,EAAAA,SAAhB,WACE,yBAAMyB,KACN,uBAEF,SAACjB,EAAD,CAAqBG,SAXL,SAACiB,GACnBhC,EAAMiC,YAAYD,EAAOE,uB,oBCM7B,GAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAvBoB,SAACb,GACrB,MAAO,CACLC,YAAaD,EAAMc,eACnBC,OAAQf,EAAMgB,KAAKD,WAME,SAACE,GACxB,MAAO,CAELP,YAAa,SAACC,GACZM,GAASC,EAAAA,EAAAA,GAAmBP,SAWhCQ,EAAAA,EAFF,CAGKC,I,iJC9BDC,EAA6B,SAACrB,GAAD,MAAY,CAC3Ce,OAAQf,EAAMgB,KAAKD,SAGRI,EAA4B,SAACG,GAAe,IACjDC,EADgD,0IAEpD,WACE,OAAKC,KAAK/C,MAAMsC,QACT,SAACO,GAAD,UAAeE,KAAK/C,SADI,SAAC,KAAD,CAAUO,GAAG,eAHM,GACtByC,EAAAA,WAWhC,OAJqCZ,EAAAA,EAAAA,IAAQQ,EAARR,CACnCU","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Messages.jsx","components/Dialogs/Message/addMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\",\"userPhoto\":\"Dialogs_userPhoto__16mEj\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\";\nimport userPhoto from \"../../../assets/images/user.png\";\n\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n\n    <div className={s.dialog + \" \" + s.active}>\n          <img src={userPhoto} className={s.userPhoto}></img>\n\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\n\nexport default DialogItem;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\";\n\n\n\nconst Message = (props) => {\n  return <div className={s.dialog}>{props.message}</div>;\n};\n\n\n\nexport default Message;\n","import { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength5 = maxLengthCreator(5);\n\nconst addMessageForm = (props) => {\n    return (\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field\n             component={Textarea}\n             validate={[required, maxLength5 ]}\n             placeholder='Enter your message' \n             name=\"newMessageBody\"\n          />\n        </div>\n        <div>\n          <button>Send</button>\n        </div>\n      </form>\n    );\n  };\n  \n export const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(addMessageForm)","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\n\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Messages\";\nimport { AddMessageFormRedux } from \"./Message/addMessageForm\";\n\n\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n\n  let dialogsElements = state.dialogs.map((d) => (\n    <DialogItem name={d.name} id={d.id} />\n  ));\n  let messagesElements = state.messages.map((m) => (\n    <Message message={m.message} />\n  ));\n\n    \n  \n\n  \n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElements}</div>\n      <div className={s.messages}>\n        <div>{messagesElements}</div>\n        <div></div>\n      </div>\n      <AddMessageFormRedux onSubmit={addNewMessage} />\n    </div>\n  );\n};\n\n\n\nexport default Dialogs;\n","import {\n  sendMessageCreator,\n  \n} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirectComponent } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsReducer,\n    isAuth: state.auth.isAuth\n    \n  };\n  \n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    \n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    },\n  };\n};\n\n\n\n\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirectComponent\n  ) (Dialogs)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirectComponent = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n"],"names":["props","path","id","className","s","src","userPhoto","to","name","message","maxLength5","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","dialogsReducer","isAuth","auth","dispatch","sendMessageCreator","withAuthRedirectComponent","Dialogs","mapStateToPropsForRedirect","Component","RedirectComponent","this","React"],"sourceRoot":""}
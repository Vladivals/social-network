{"version":3,"file":"static/js/657.c747bd4f.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Avatar/Avatar.module.css?74bd","components/Avatar/Avatar.jsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Messages.jsx","components/Dialogs/Message/addMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Avatar_avatar__Uauly\"};","import React from \"react\";\r\nimport style from \"./Avatar.module.css\";\r\n\r\nconst Avatar = ({ avatar }) => {\r\n  return (\r\n    <div\r\n      className={style.avatar}\r\n      style={{ background: `url(\"${avatar}\") center center/contain no-repeat, rgba(243, 244, 246, 1)` }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Avatar;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsContent\":\"Dialogs_dialogsContent__TnLwX\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"dialogsItemsHeader\":\"Dialogs_dialogsItemsHeader__0SItC\",\"dialog\":\"Dialogs_dialog__htSTl\",\"dialogMine\":\"Dialogs_dialogMine__5PxtI\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"messagesContent\":\"Dialogs_messagesContent__WH1Y7\",\"messagesContentMessages\":\"Dialogs_messagesContentMessages__++CGe\",\"message\":\"Dialogs_message__ZEWo0\",\"addMessageForm\":\"Dialogs_addMessageForm__8nO+b\",\"addMessageFormFooter\":\"Dialogs_addMessageFormFooter__s2DdB\",\"userPhoto\":\"Dialogs_userPhoto__16mEj\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport Avatar from \"../../Avatar/Avatar\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <Avatar avatar={userPhoto} />\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport Avatar from \"../../Avatar/Avatar\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\n\r\nconst Message = ({ message, isOwner, profileAvatar }) => {\r\n  return (\r\n    <div className={`${s.dialog} ${isOwner && s.dialogMine}`}>\r\n      <Avatar avatar={isOwner && profileAvatar} />\r\n      <span>{message}</span>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default Message;\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport Button from \"../../Button/Button\";\r\nimport style from \"../Dialogs.module.css\";\r\n\r\nconst maxLength5 = maxLengthCreator(5);\r\n\r\nconst addMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={style.addMessageForm}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength5]}\r\n          placeholder='Enter your message'\r\n          name=\"newMessageBody\"\r\n        />\r\n      </div>\r\n      <div className={style.addMessageFormFooter}>\r\n        <Button label=\"Send\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(addMessageForm)","import React, { useEffect } from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Messages\";\r\nimport { AddMessageFormRedux } from \"./Message/addMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} isOwner={true} profileAvatar={props.profile?.photos?.small} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.getUserProfile(props.authorisedUserId)\r\n  }, [])\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        <div className={s.dialogsItemsHeader}>\r\n          Dialogs\r\n        </div>\r\n        <div className={s.dialogsContent}>\r\n          {dialogsElements}\r\n        </div>\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div className={s.dialogsItemsHeader}>\r\n          Username\r\n        </div>\r\n        <div className={s.messagesContent}>\r\n          <div className={s.messagesContentMessages}>{messagesElements}</div>\r\n          <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;\r\n","import {\r\n  sendMessageCreator,\r\n\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirectComponent } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getUserProfile } from \"../../redux/profile-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsReducer,\r\n    isAuth: state.auth.isAuth,\r\n    profile: state.profileReducer.profile,\r\n    authorisedUserId: state.auth.userId,\r\n  };\r\n\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n    getUserProfile: (userId) => {\r\n      dispatch(getUserProfile(userId))\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirectComponent\r\n)(Dialogs)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["avatar","className","style","background","props","path","id","s","Avatar","userPhoto","to","name","message","isOwner","profileAvatar","maxLength5","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Button","label","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","profile","photos","small","useEffect","getUserProfile","authorisedUserId","values","sendMessage","newMessageBody","compose","connect","dialogsReducer","isAuth","auth","profileReducer","userId","dispatch","sendMessageCreator","withAuthRedirectComponent","Dialogs","mapStateToPropsForRedirect","Component","RedirectComponent","this","React"],"sourceRoot":""}
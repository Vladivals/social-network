{"version":3,"file":"static/js/864.d508c85b.chunk.js","mappings":"gJACA,EAAyB,uB,SCWzB,EATe,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAChB,OACE,gBACEC,UAAWC,EACXA,MAAO,CAAEC,WAAW,QAAD,OAAUH,EAAV,mE,qJCNzB,EAA6B,4BAA7B,EAAiE,uBAAjE,EAAsG,6BAAtG,EAAqJ,iCAArJ,EAA8M,uCCA9M,EAA8B,0BAA9B,EAA+D,mBAA/D,EAA2F,qBAA3F,EAAuH,mB,kBCwBvH,EAnBa,SAACI,GAAW,IAAD,IAEtB,OACE,iBAAKH,UAAWI,EAAhB,WACE,iBAAKJ,UAAWI,EAAhB,WACE,SAACC,EAAA,EAAD,CAAQN,OAAM,UAAEI,EAAMG,eAAR,iBAAE,EAAeC,cAAjB,aAAE,EAAuBC,QACtCL,EAAMM,QAFT,QAIA,gBAAKT,UAAWI,EAAhB,UACE,iBAAKJ,UAAWI,EAAhB,WACE,gBAAKM,I,yvFAAcC,IAAI,YACtBR,EAAMS,oB,iDCLXC,GAAcC,EAAAA,EAAAA,GAAiB,IAmB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,yBAAlBD,EAjBR,SAACb,GACnB,OACE,kBAAMe,SAAUf,EAAMgB,aAAcnB,UAAWI,EAA/C,WACE,0BACE,SAACgB,EAAA,EAAD,CACEC,UAAWC,EAAAA,GACXC,KAAK,cACLC,SAAU,CAACC,EAAAA,EAAUZ,QAGzB,gBAAKb,UAAWI,EAAhB,UACE,SAACsB,EAAA,EAAD,CAAQC,MAAM,qBAkCtB,EAxBiBC,EAAAA,OAAe,SAACzB,GAAW,IAAD,IACrC0B,EAAgB1B,EAAM2B,MAAMC,KAAI,SAACC,GAAD,OAClC,SAAC,EAAD,CACEvB,QAASuB,EAAEvB,QACXG,WAAYoB,EAAEpB,WACdN,QAASH,EAAMG,aAQnB,OACE,iBAAKN,UAAWI,EAAhB,WACE,iBAAKJ,UAAWI,EAAhB,WACE,SAACC,EAAA,EAAD,CAAQN,OAAM,UAAEI,EAAMG,eAAR,iBAAE,EAAeC,cAAjB,aAAE,EAAuBC,SACvC,SAACO,EAAD,CAAqBG,SARP,SAACe,GACnB9B,EAAM+B,QAAQD,EAAOE,oBASnB,gBAAKnC,UAAWI,EAAhB,SAA0ByB,QChChC,GAFyBO,EAAAA,EAAAA,KAhBH,SAACC,GACrB,MAAO,CACLP,MAAOO,EAAMC,eAAeR,MAC5BS,YAAaF,EAAMC,eAAeC,YAClCjC,QAAS+B,EAAMC,eAAehC,YAIT,SAACkC,GACxB,MAAO,CACLN,QAAS,SAACC,GACRK,GAASC,EAAAA,EAAAA,IAAqBN,QAKXC,CAA6CM,G,mBCnBtE,GAAgB,mBAAqB,wCAAwC,iBAAmB,sCAAsC,UAAY,+BAA+B,QAAU,6BAA6B,OAAS,4BAA4B,YAAc,iCAAiC,YAAc,iCAAiC,KAAO,0BAA0B,eAAiB,oCAAoC,QAAU,6BAA6B,gBAAkB,qCAAqC,UAAY,gCCkD3hB,EA9C+B,SAACvC,GAE9B,OAA6BwC,EAAAA,EAAAA,WAAS,GAAtC,eAAKC,EAAL,KAAcC,EAAd,KACA,GAAyBF,EAAAA,EAAAA,UAASxC,EAAM2C,QAAxC,eAAKA,EAAL,KAAYC,EAAZ,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAAU5C,EAAM2C,UACf,CAAC3C,EAAM2C,SAkBV,OACE,iBAAK9C,UAAWI,EAAAA,OAAhB,WACKwC,IACD,4BACE,qCAAe,iBAAMK,cApBR,WACnBJ,GAAY,IAmBS,SAAoC1C,EAAM2C,YAG3DF,IACA,0BACE,kBACEM,WAAW,EACXC,OAvBiB,WAEzBN,GAAY,GAEZ1C,EAAMiD,aAAaN,IAoBXO,SAhBW,SAACC,GACtBP,EAAUO,EAAEC,cAAcC,QAgBhBA,MAAOV,U,oBCInB,GAFiC9B,EAAAA,EAAAA,GAAU,CAAEC,KAAM,gBAAlBD,EArCT,SAACb,GAEvB,OAAO,kBAAMe,SAAUf,EAAMgB,aAAcnB,UAAWI,EAAAA,gBAA/C,WACJ,gBAAKJ,UAAWI,EAAAA,QAAhB,UAA2B,SAACsB,EAAA,EAAD,CAAQC,MAAM,WAEzCxB,EAAMsD,QAAS,gBAAKzD,UAAWC,EAAAA,EAAAA,iBAAhB,SACbE,EAAMsD,SAGT,4BACE,qCADF,MACqBC,EAAAA,EAAAA,IAAY,YAAa,WAAY,GAAIC,EAAAA,QAG9D,4BACE,6CADF,MAC6BD,EAAAA,EAAAA,IAAY,GAAI,iBAAkB,GAAIC,EAAAA,GAAO,CAAEC,KAAM,iBAGlF,4BACE,kDADF,MACkCF,EAAAA,EAAAA,IAAY,yBAA0B,4BAA6B,GAAIpC,EAAAA,QAGzG,4BACE,oCADF,KAEGoC,EAAAA,EAAAA,IAAY,WAAY,UAAW,GAAIpC,EAAAA,QAG1C,4BACE,oCADF,IACmBuC,OAAOC,KAAK3D,EAAMG,QAAQyD,UAAUhC,KAAI,SAAAiC,GAEvD,OAAO,gBAAehE,UAAWI,EAAAA,QAA1B,UACL,yBAAI4D,EAAJ,MAAWN,EAAAA,EAAAA,IAAYM,EAAK,YAAcA,EAAK,GAAIL,EAAAA,QADpCK,e,UCmBnBC,EAAc,SAAC,GAAwC,IAAtC3D,EAAqC,EAArCA,QAAS4D,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACvC,OAAO,iBAAKnE,UAAWI,EAAAA,YAAhB,WACL,iBAAKJ,UAAWI,EAAAA,YAAhB,WACE,0BACGE,EAAQ8D,WAGTF,IAAW,SAACxC,EAAA,EAAD,CAAQ2C,QAASF,EAAcxC,MAAM,OAAO2C,OAAQlE,EAAAA,cAInE,yBAEIE,EAAQiE,iBAAkB,cAAGvE,UAAWI,EAAAA,eAAd,iCAG7BE,EAAQiE,iBACP,iBAAKvE,UAAWI,EAAAA,KAAhB,oCAC0BE,EAAQkE,8BAGpC,iBAAKxE,UAAWI,EAAAA,KAAhB,sBACYE,EAAQmE,YAEpB,iBAAKzE,UAAWI,EAAAA,KAAhB,WACE,oCADF,IACmByD,OAAOC,KAAKxD,EAAQyD,UAAUhC,KAAI,SAAAiC,GACjD,GAAI1D,EAAQyD,SAASC,GACnB,OAAO,SAACU,EAAD,CAAmBC,aAAcX,EAAKY,aAActE,EAAQyD,SAASC,IAAvDA,aASzBU,EAAU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC/B,OAAO,iBAAK5E,UAAWI,EAAAA,QAAhB,WAA2B,uBAAIuE,IAA/B,KAAmDC,MAG5D,EAvFoB,SAACzE,GAEnB,OAA8BwC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KAEA,IAAK1C,EAAMG,QACT,OACE,gBAAKN,UAAWI,EAAAA,UAAhB,UACE,SAACyE,EAAA,EAAD,MAkBN,OACE,gBAAK7E,UAAWI,EAAAA,mBAAhB,UACE,iBAAKJ,UAAWI,EAAAA,iBAAhB,WACE,iBACEJ,UAAWI,EAAAA,UACXH,MAAO,CAAEC,WAAW,QAAD,OAAUC,EAAMG,QAAQC,OAAOuE,OAASC,EAAxC,8CAFrB,WAIE,SAAC,MAAD,IACC5E,EAAM+D,UAAW,kBAAON,KAAM,OAAQP,SArBnB,SAACC,GACvBA,EAAE0B,OAAOC,MAAMC,QACjB/E,EAAMgF,UAAU7B,EAAE0B,OAAOC,MAAM,UAsB5BrC,GACG,SAAC,EAAD,CAAiBwC,cAAejF,EAAMG,QAASA,QAASH,EAAMG,QAASY,SAnBhE,SAACmE,GAChBlF,EAAMmF,YAAYD,GACfE,MAAK,kBAAM1C,GAAY,UAkBlB,SAACoB,EAAD,CAAaE,aAAc,WAAQtB,GAAY,IAASvC,QAASH,EAAMG,QAAS4D,QAAS/D,EAAM+D,WAGnG,SAAC,EAAD,CAAwBpB,OAAQ3C,EAAM2C,OAAQM,aAAcjD,EAAMiD,qBC7B1E,EAjBgB,SAACjD,GAGf,OACE,4BACE,SAAC,EAAD,CAAagF,UAAWhF,EAAMgF,UAC5BjB,QAAS/D,EAAM+D,QACf5D,QAASH,EAAMG,QACfwC,OAAQ3C,EAAM2C,OACdM,aAAcjD,EAAMiD,aACpBkC,YAAanF,EAAMmF,eAErB,SAAC,EAAD,CAAkBhF,QAASH,EAAMG,c,8BCEtC,IACKkF,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WA4BH,OA5BGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MAEJ,WAEE,IAAIC,EAASC,KAAKvF,MAAMwF,OAAOC,OAAOH,QACjCA,GAAUC,KAAKvF,MAAM0F,SACxBJ,EAASC,KAAKvF,MAAM2F,kBAEtBJ,KAAKvF,MAAM4F,eAAeN,GAC1BC,KAAKvF,MAAM6F,UAAUP,KACtB,+BAED,WACEC,KAAKO,mBACN,oBAED,WAEE,OACE,0BACE,SAAC,GAAD,kBAAaP,KAAKvF,OAAlB,IACE+D,SAAUwB,KAAKvF,MAAMwF,OAAOC,OAAOH,OACnCnF,QAASoF,KAAKvF,MAAMG,QACpBwC,OAAQ4C,KAAKvF,MAAM2C,OACnBM,aAAcsC,KAAKvF,MAAMiD,aACzB+B,UAAWO,KAAKvF,MAAMgF,mBAG7B,EA5BGK,CAAyB5D,EAAAA,WA0C/B,GAAesE,EAAAA,EAAAA,KACb9D,EAAAA,EAAAA,KAXoB,SAACC,GAAD,MAAY,CAChC/B,QAAS+B,EAAMC,eAAehC,QAC9BwC,OAAQT,EAAMC,eAAeQ,OAC7BgD,iBAAkBzD,EAAM8D,KAAKV,OAC7BI,OAAQxD,EAAM8D,KAAKN,UAOM,CAAEE,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAW5C,aAAAA,EAAAA,GAAc+B,UAAAA,EAAAA,GAAWG,YAAAA,EAAAA,MAtDjF,SAAoBc,GAQlB,OAPA,SAAiCjG,GAC/B,IAAIkG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXZ,GAASa,EAAAA,EAAAA,MACb,OAAO,SAACL,GAAD,kBAAejG,GAAf,IAAsBwF,OAAQ,CAAEU,SAAAA,EAAUE,SAAAA,EAAUX,OAAAA,SAmD7Dc,EAAAA,EAHF,CAMElB,I,iJC/DEmB,EAA6B,SAACtE,GAAD,MAAY,CAC3CwD,OAAQxD,EAAM8D,KAAKN,SAGRa,EAA4B,SAACN,GAAe,IACjDQ,EADgD,0IAEpD,WACE,OAAKlB,KAAKvF,MAAM0F,QACT,SAACO,GAAD,UAAeV,KAAKvF,SADI,SAAC,KAAD,CAAU0G,GAAG,eAHM,GACtBjF,EAAAA,WAWhC,OAJqCQ,EAAAA,EAAAA,IAAQuE,EAARvE,CACnCwE","sources":["webpack://my-app/./src/components/Avatar/Avatar.module.css?74bd","components/Avatar/Avatar.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Avatar_avatar__Uauly\"};","import React from \"react\";\r\nimport style from \"./Avatar.module.css\";\r\n\r\nconst Avatar = ({ avatar }) => {\r\n  return (\r\n    <div\r\n      className={style.avatar}\r\n      style={{ background: `url(\"${avatar}\") center center/contain no-repeat, rgba(243, 244, 246, 1)` }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Avatar;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\",\"addPostCard\":\"MyPosts_addPostCard__wThYg\",\"addPostCardForm\":\"MyPosts_addPostCardForm__y0ipL\",\"addPostCardFormFooter\":\"MyPosts_addPostCardFormFooter__xQhkb\"};","// extracted by mini-css-extract-plugin\nexport default {\"postWrapper\":\"Post_postWrapper__EF5qQ\",\"item\":\"Post_item__Yu4oG\",\"footer\":\"Post_footer__aFlMS\",\"like\":\"Post_like__+fQP+\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport likeImg from \"../../../../assets/images/like.png\";\r\nimport Avatar from \"../../../Avatar/Avatar\";\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.postWrapper}>\r\n      <div className={s.item}>\r\n        <Avatar avatar={props.profile?.photos?.small} />\r\n        {props.message};\r\n      </div>\r\n      <div className={s.footer}>\r\n        <div className={s.like}>\r\n          <img src={likeImg} alt=\"likeImg\" />\r\n          {props.likesCount}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport Button from \"../../Button/Button\";\r\nimport Avatar from \"../../Avatar/Avatar\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst addPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.addPostCardForm}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostBody\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div className={s.addPostCardFormFooter}>\r\n        <Button label=\"Add post\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  addPostForm\r\n);\r\n\r\nconst MyPosts = (React.render = (props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post\r\n      message={p.message}\r\n      likesCount={p.likesCount}\r\n      profile={props.profile}\r\n    />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <div className={s.addPostCard}>\r\n        <Avatar avatar={props.profile?.photos?.small} />\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profileReducer.posts,\r\n    newPostText: state.profileReducer.newPostText,\r\n    profile: state.profileReducer.profile,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__NQlSq\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__QU8TO\",\"contact\":\"ProfileInfo_contact__sQB8W\",\"status\":\"ProfileInfo_status__YrBI5\",\"profileName\":\"ProfileInfo_profileName__nqOfa\",\"profileInfo\":\"ProfileInfo_profileInfo__QG8TK\",\"item\":\"ProfileInfo_item__Qn6+5\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__CTG0T\",\"saveBtn\":\"ProfileInfo_saveBtn__Xwco0\",\"profileEditform\":\"ProfileInfo_profileEditform__6EFrg\",\"preloader\":\"ProfileInfo_preloader__Agb2r\"};","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode,setEditMode] = useState(false);\r\n  let [status,setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n\r\n    setEditMode(false);\r\n\r\n    props.updateStatus(status);\r\n\r\n};\r\n\r\nconst onStatusChange = (e) => {\r\n  setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className={s.status}>\r\n      { !editMode &&\r\n        <div >\r\n          <b>Status: </b><span onDoubleClick={activateMode}>{props.status}</span>\r\n        </div>\r\n      }\r\n      { editMode && (\r\n        <div >\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\"\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\nimport Button from \"../../Button/Button\";\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n  return <form onSubmit={props.handleSubmit} className={s.profileEditform}>\r\n    {<div className={s.saveBtn}><Button label=\"Save\" /></div>}\r\n\r\n    {props.error && <div className={style.formSummaryError}>\r\n      {props.error}\r\n    </div>}\r\n\r\n    <div>\r\n      <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n    </div>\r\n\r\n    <div>\r\n      <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n    </div>\r\n\r\n    <div>\r\n      <b>My professional skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n    </div>\r\n\r\n    <div>\r\n      <b>About me</b>:\r\n      {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n    </div>\r\n\r\n    <div>\r\n      <b>Contacts</b>:{Object.keys(props.profile.contacts).map(key => {\r\n        \r\n        return <div key={key} className={s.contact}>\r\n          <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n        </div>\r\n      })}\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport Button from \"../../Button/Button\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return (\r\n      <div className={s.preloader}>\r\n        <Preloader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    };\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData)\r\n      .then(() => setEditMode(false));\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={s.profileInfoWrapper}>\r\n      <div className={s.descriptionBlock}>\r\n        <div\r\n          className={s.mainPhoto}\r\n          style={{ background: `url(\"${props.profile.photos.large || userPhoto}\") center center/cover no-repeat, #244BC5` }}\r\n        >\r\n          <FaIcons.FaCloudDownloadAlt />\r\n          {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        </div>\r\n\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\r\n          : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={props.profile} isOwner={props.isOwner} />}\r\n\r\n\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div className={s.profileInfo}>\r\n    <div className={s.profileName}>\r\n      <span>\r\n        {profile.fullName}\r\n      </span>\r\n      {\r\n        isOwner && <Button onClick={goToEditMode} label=\"Edit\" styles={s.editBtn} />\r\n      }\r\n    </div>\r\n\r\n    <div>\r\n      {\r\n        profile.lookingForAJob && <b className={s.lookingForAJob}>Looking for a job</b>\r\n      }\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div className={s.item}>\r\n        My professional skills:{profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div className={s.item}>\r\n      About me:{profile.aboutMe}\r\n    </div>\r\n    <div className={s.item}>\r\n      <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n        if (profile.contacts[key]) {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        }\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile} />\r\n\r\n      <MyPostsContainer profile={props.profile} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirectComponent } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n\r\n}\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId && this.props.isAuth) {\r\n      userId = this.props.authorisedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n          isOwner={!this.props.router.params.userId}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profileReducer.profile,\r\n  status: state.profileReducer.status,\r\n  authorisedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n\r\n});\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter, \r\n  withAuthRedirectComponent\r\n\r\n\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["avatar","className","style","background","props","s","Avatar","profile","photos","small","message","src","alt","likesCount","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","Button","label","React","postsElements","posts","map","p","values","addPost","newPostBody","connect","state","profileReducer","newPostText","dispatch","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","error","createField","Input","type","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","fullName","onClick","styles","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","Preloader","large","userPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","then","ProfileContainer","userId","this","router","params","isAuth","authorisedUserId","getUserProfile","getStatus","refreshProfile","compose","auth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirectComponent","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}